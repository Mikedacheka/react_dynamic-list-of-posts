{"version":3,"sources":["api/api.ts","api/posts.ts","components/PostsList/PostsList.tsx","api/comments.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","api/users.ts","App.tsx","index.tsx"],"names":["BASE_URL","getAllPosts","a","fetch","response","json","getUserPosts","userId","PostsList","selectedUser","selectedPostHandler","selectedPostId","useState","posts","setPosts","useEffect","loadData","postsAPI","postsFromServer","className","map","post","title","id","type","classnames","onClick","getPostComments","postId","deleteSelectedComment","method","createNewComment","newComment","name","email","body","headers","JSON","stringify","NewCommentForm","commentDetails","setCommentDetails","handleInputDetails","event","input","target","inputValue","value","createCommentHandler","placeholder","onChange","required","preventDefault","PostDetails","selectedPost","postComments","setPostComments","commentsVisibility","setCommentsVisibility","commentsAPI","commentsFromServer","deleteCommentHandler","useCallback","length","postComment","getAllUsers","App","setSelectedUser","setSelectedPost","users","setUsers","usersAPI","usersFromServer","htmlFor","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13fbc34d.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate.academy/students-api';\n","import { BASE_URL } from './api';\n\nexport async function getAllPosts() {\n  const response = await fetch(`${BASE_URL}/posts`);\n\n  return response.json();\n}\n\nexport async function getUserPosts(userId: number) {\n  const response = await fetch(`${BASE_URL}/posts?userId=${userId}`);\n\n  return response.json();\n}\n\nexport async function getPostDetails(postId: number) {\n  const response = await fetch(`${BASE_URL}/posts/${postId}`);\n\n  return response.json();\n}\n","import React, { useState, useEffect } from 'react';\nimport './PostsList.scss';\nimport classnames from 'classnames';\n\nimport * as postsAPI from '../../api/posts';\n\ntype Props = {\n  selectedUser: number,\n  selectedPostHandler: (postId: Post) => void,\n  selectedPostId: number | undefined,\n};\n\nexport const PostsList: React.FC<Props> = ({\n  selectedUser,\n  selectedPostHandler,\n  selectedPostId,\n}) => {\n  const [posts, setPosts] = useState<Post[]>([]);\n\n  useEffect(() => {\n    const loadData = async (userId: number) => {\n      if (userId === 0) {\n        const postsFromServer = await postsAPI.getAllPosts();\n\n        setPosts(postsFromServer);\n      } else {\n        const postsFromServer = await postsAPI.getUserPosts(userId);\n\n        setPosts(postsFromServer);\n      }\n    };\n\n    loadData(selectedUser);\n  }, [selectedUser]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      <ul className=\"PostsList__list\">\n        {posts.map((post) => (\n          <li\n            className=\"PostsList__item\"\n            key={post.id}\n          >\n            <div>\n              <b>\n                [User#\n                {post.userId}\n                ]:\n              </b>\n              {post.title}\n            </div>\n            {selectedPostId === post.id\n              ? (\n                <button\n                  type=\"button\"\n                  className={classnames('PostsList__button button', {\n                    'PostsList__button-selected': post.id === selectedPostId,\n                  })}\n                  onClick={() => {\n                    selectedPostHandler(post);\n                  }}\n                >\n                  Close\n                </button>\n              )\n              : (\n                <button\n                  type=\"button\"\n                  className={classnames('PostsList__button button', {\n                    'PostsList__button-selected': post.id === selectedPostId,\n                  })}\n                  onClick={() => {\n                    selectedPostHandler(post);\n                  }}\n                >\n                  Open\n                </button>\n              )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { BASE_URL } from './api';\n\nexport async function getPostComments(postId: number) {\n  const response = await fetch(`${BASE_URL}/comments?postId=${postId}`);\n\n  return response.json();\n}\n\nexport async function deleteSelectedComment(postId: number) {\n  return fetch(`${BASE_URL}/comments/${postId}`, {\n    method: 'DELETE',\n  });\n}\n\nexport async function createNewComment(\n  newComment: NewComment,\n) {\n  const {\n    postId,\n    name,\n    email,\n    body,\n  } = newComment;\n\n  const response = await fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=utf-8',\n    },\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n  });\n\n  return response.json();\n}\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\n\nimport { createNewComment } from '../../api/comments';\n\ntype Props = {\n  loadData: (postId: number) => void,\n  selectedPostId: number,\n};\n\nexport const NewCommentForm: React.FC<Props> = ({ selectedPostId, loadData }) => {\n  const [commentDetails, setCommentDetails] = useState({} as NewComment);\n\n  const handleInputDetails = (event: FormInput) => {\n    const input = event.target;\n    const inputValue = event.target.value;\n    const newComment = {\n      name: '',\n      email: '',\n      body: '',\n      postId: selectedPostId,\n    };\n\n    switch (input.name) {\n      case 'name': {\n        newComment.name = inputValue;\n        break;\n      }\n\n      case 'email': {\n        newComment.email = inputValue;\n        break;\n      }\n\n      case 'body': {\n        newComment.body = inputValue;\n        break;\n      }\n\n      default: {\n        break;\n      }\n    }\n\n    newComment.postId = selectedPostId;\n\n    setCommentDetails(newComment);\n  };\n\n  const createCommentHandler = async () => {\n    await createNewComment(commentDetails);\n    loadData(selectedPostId);\n  };\n\n  return (\n    <form className=\"NewCommentForm\">\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          onChange={handleInputDetails}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          onChange={handleInputDetails}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          onChange={handleInputDetails}\n          required\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n        onClick={(event) => {\n          event.preventDefault();\n          createCommentHandler();\n        }}\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\nimport * as commentsAPI from '../../api/comments';\n\ntype Props = {\n  selectedPost: Post,\n};\n\nexport const PostDetails: React.FC<Props> = ({ selectedPost }) => {\n  const [postComments, setPostComments] = useState<PostComment[]>([]);\n  const [commentsVisibility, setCommentsVisibility] = useState(false);\n\n  const loadData = async (postId: number) => {\n    const commentsFromServer = await commentsAPI.getPostComments(postId);\n\n    setPostComments(commentsFromServer);\n  };\n\n  const commentsVisibilityHandler = () => {\n    setCommentsVisibility(!commentsVisibility);\n  };\n\n  const deleteCommentHandler = useCallback(async (postId: number) => {\n    await commentsAPI.deleteSelectedComment(postId);\n    await loadData(selectedPost.id);\n  }, []);\n\n  useEffect(() => {\n    loadData(selectedPost.id);\n  }, [selectedPost]);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>\n        Post details:\n      </h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{selectedPost.title}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => {\n            commentsVisibilityHandler();\n          }}\n        >\n          {commentsVisibility && ' Hide ' }\n          {!commentsVisibility && ' Show ' }\n          {postComments.length}\n          {' comments '}\n        </button>\n        {\n          commentsVisibility\n          && (\n            <ul className=\"PostDetails__list\">\n              {postComments.map((postComment) => {\n                return (\n                  <li\n                    className=\"PostDetails__list-item\"\n                    key={postComment.id}\n                  >\n                    <button\n                      type=\"button\"\n                      className=\"PostDetails__remove-button button\"\n                      onClick={() => {\n                        deleteCommentHandler(postComment.id);\n                      }}\n                    >\n                      X\n                    </button>\n                    <h4>\n                      {postComment.title}\n                    </h4>\n                    <p>{postComment.body}</p>\n                  </li>\n                );\n              })}\n            </ul>\n          )\n        }\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm selectedPostId={selectedPost.id} loadData={loadData} />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import { BASE_URL } from './api';\n\nexport async function getAllUsers() {\n  const response = await fetch(`${BASE_URL}/users`);\n\n  return response.json();\n}\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nimport * as usersAPI from './api/users';\n\nexport const App: React.FC = () => {\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [selectedPost, setSelectedPost] = useState<Post>();\n  const [users, setUsers] = useState<User[]>([]);\n\n  useEffect(() => {\n    const loadData = async () => {\n      const usersFromServer = await usersAPI.getAllUsers();\n\n      setUsers(usersFromServer);\n    };\n\n    loadData();\n  }, []);\n\n  const selectedPostHandler = (post: Post) => {\n    setSelectedPost(post);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label htmlFor=\"userSelect\">\n          Select a user: &nbsp;\n\n          <select\n            id=\"userSelect\"\n            className=\"App__user-selector\"\n            onChange={(event) => (\n              setSelectedUser(+event.target.value)\n            )}\n          >\n            <option value=\"0\">All users</option>\n            {users.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            selectedPostId={selectedPost?.id}\n            selectedUser={selectedUser}\n            selectedPostHandler={selectedPostHandler}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {\n            selectedPost\n            && (\n              <PostDetails\n                selectedPost={selectedPost}\n              />\n            )\n          }\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}