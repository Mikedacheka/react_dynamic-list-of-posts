{"version":3,"sources":["components/PostsList/PostsList.tsx","api/api.ts","api/comments.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","api/posts.ts","App.tsx","index.tsx"],"names":["PostsList","posts","selectedPostHandler","selectedPostId","className","map","post","userId","title","type","classnames","id","onClick","event","BASE_URL","getPostComments","postId","a","fetch","response","json","postComments","method","deleteResponse","notPostComments","newComment","name","email","body","headers","JSON","stringify","NewCommentForm","useState","commentDetails","setCommentDetails","handleInputDetails","input","target","inputValue","value","createCommentHandler","preventDefault","createNewComment","placeholder","onChange","required","PostDetails","selectedPost","setPostComments","commentsVisibility","setCommentsVisibility","useEffect","loadData","commentsAPI","commentsFromServer","deletePostComment","commentId","length","postComment","getAllPosts","getUserPosts","getPostDetails","App","items","setItems","selectedUser","setSelectedUser","setSelectedPostId","setSelectedPost","postsAPI","postsFromServer","postFromServer","htmlFor","currentTarget","buttons","document","querySelectorAll","innerHTML","forEach","button","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0e63e70d.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\nimport classnames from 'classnames';\n\ntype Props = {\n  posts: Post[],\n  selectedPostId: number,\n  selectedPostHandler: (event: React.MouseEvent<HTMLButtonElement>, postId: number) => void,\n};\n\nexport const PostsList: React.FC<Props> = ({ posts, selectedPostHandler, selectedPostId }) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n    <ul className=\"PostsList__list\">\n      {posts.map((post) => (\n        <li\n          className=\"PostsList__item\"\n          key={post.id}\n        >\n          <div>\n            <b>\n              [User#\n              {post.userId}\n              ]:\n            </b>\n            {post.title}\n          </div>\n          <button\n            type=\"button\"\n            className={classnames('PostsList__button button', {\n              'PostsList__button-selected': post.id === selectedPostId,\n            })}\n            onClick={(event) => {\n              selectedPostHandler(event, post.id);\n            }}\n          >\n            Open\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","export const BASE_URL = 'https://mate.academy/students-api';\n","import { BASE_URL } from './api';\n\nexport async function getPostComments(postId: number) {\n  const response = await fetch(`${BASE_URL}/comments?postId=${postId}`);\n  const postComments = await response.json();\n\n  return postComments;\n}\n\nexport async function deleteSelectedComment(postId: number) {\n  const deleteResponse = await fetch(`${BASE_URL}/comments/${postId}`, {\n    method: 'DELETE',\n  });\n  const notPostComments = await deleteResponse.json();\n\n  return notPostComments;\n}\n\nexport async function createNewComment(\n  newComment: NewComment,\n) {\n  const {\n    postId,\n    name,\n    email,\n    body,\n  } = newComment;\n\n  const response = await fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=utf-8',\n    },\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n  });\n\n  return response.json();\n}\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\n\nimport { createNewComment } from '../../api/comments';\n\ntype Props = {\n  selectedPostId: number,\n};\n\nexport const NewCommentForm: React.FC<Props> = ({ selectedPostId }) => {\n  const [commentDetails, setCommentDetails] = useState({} as NewComment);\n\n  const handleInputDetails = (event: FormInput) => {\n    const input = event.target;\n    const inputValue = event.target.value;\n    const newComment = {\n      name: '',\n      email: '',\n      body: '',\n      postId: selectedPostId,\n    };\n\n    switch (input.name) {\n      case 'name': {\n        newComment.name = inputValue;\n        break;\n      }\n\n      case 'email': {\n        newComment.email = inputValue;\n        break;\n      }\n\n      case 'body': {\n        newComment.body = inputValue;\n        break;\n      }\n\n      default: {\n        break;\n      }\n    }\n\n    newComment.postId = selectedPostId;\n\n    setCommentDetails(newComment);\n  };\n\n  const createCommentHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n    createNewComment(commentDetails);\n  };\n\n  return (\n    <form className=\"NewCommentForm\">\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          onChange={handleInputDetails}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          onChange={handleInputDetails}\n          required\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          onChange={handleInputDetails}\n          required\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n        onClick={(event) => {\n          createCommentHandler(event);\n        }}\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\nimport * as commentsAPI from '../../api/comments';\n\ntype Props = {\n  selectedPost: Post,\n  selectedPostId: number,\n};\n\nexport const PostDetails: React.FC<Props> = ({ selectedPost, selectedPostId }) => {\n  const [postComments, setPostComments] = useState([] as PostComment[]);\n  const [commentsVisibility, setCommentsVisibility] = useState(false);\n\n  useEffect(() => {\n    const loadData = async (postId: number) => {\n      const commentsFromServer = await commentsAPI.getPostComments(postId);\n\n      setPostComments(commentsFromServer);\n    };\n\n    loadData(selectedPostId);\n  }, [selectedPostId, postComments]);\n\n  const commentsHandler = () => {\n    setCommentsVisibility(!commentsVisibility);\n  };\n\n  const deletePostComment = (commentId: number) => {\n    commentsAPI.deleteSelectedComment(commentId);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>\n        Post details:\n      </h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{selectedPost.title}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => {\n            commentsHandler();\n          }}\n        >\n          {commentsVisibility && ' Hide ' }\n          {!commentsVisibility && ' Show ' }\n          {postComments.length}\n          {' comments '}\n        </button>\n        {\n          commentsVisibility\n          && (\n            <ul className=\"PostDetails__list\">\n              {postComments.map((postComment) => {\n                return (\n                  <li\n                    className=\"PostDetails__list-item\"\n                    key={postComment.id}\n                  >\n                    <button\n                      type=\"button\"\n                      className=\"PostDetails__remove-button button\"\n                      onClick={() => {\n                        deletePostComment(postComment.id);\n                      }}\n                    >\n                      X\n                    </button>\n                    <p>{postComment.body}</p>\n                  </li>\n                );\n              })}\n            </ul>\n          )\n        }\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm selectedPostId={selectedPostId} />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import { BASE_URL } from './api';\n\nexport async function getAllPosts() {\n  const response = await fetch(`${BASE_URL}/posts`);\n  const posts = await response.json();\n\n  return posts;\n}\n\nexport async function getUserPosts(userId: number) {\n  const response = await fetch(`${BASE_URL}/posts?userId=${userId}`);\n  const posts = await response.json();\n\n  return posts;\n}\n\nexport async function getPostDetails(postId: number) {\n  const response = await fetch(`${BASE_URL}/posts/${postId}`);\n  const post = await response.json();\n\n  return post;\n}\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nimport * as postsAPI from './api/posts';\n\nexport const App: React.FC = () => {\n  const [items, setItems] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n  const [selectedPost, setSelectedPost] = useState({} as Post);\n\n  useEffect(() => {\n    const loadData = async (userId: number) => {\n      if (userId === 0) {\n        const postsFromServer = await postsAPI.getAllPosts();\n\n        setItems(postsFromServer);\n      } else {\n        const postsFromServer = await postsAPI.getUserPosts(userId);\n\n        setItems(postsFromServer);\n      }\n    };\n\n    loadData(selectedUser);\n  }, [selectedUser]);\n\n  useEffect(() => {\n    const loadData = async (postId: number) => {\n      const postFromServer = await postsAPI.getPostDetails(postId);\n\n      setSelectedPost(postFromServer);\n    };\n\n    loadData(selectedPostId);\n  }, [selectedPostId]);\n\n  const selectedPostHandler = (event: React.MouseEvent<HTMLButtonElement>, postId: number) => {\n    const target = event.currentTarget;\n    const buttons = document.querySelectorAll('.PostsList__button');\n\n    if (postId === selectedPostId) {\n      setSelectedPostId(0);\n      target.innerHTML = 'Open';\n\n      return;\n    }\n\n    if (postId !== selectedPostId) {\n      buttons.forEach((button) => {\n        const valueOfButton = button;\n\n        valueOfButton.innerHTML = 'Open';\n      });\n    }\n\n    target.innerHTML = 'Close';\n    setSelectedPostId(postId);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label htmlFor=\"userSelect\">\n          Select a user: &nbsp;\n\n          <select\n            id=\"userSelect\"\n            className=\"App__user-selector\"\n            onChange={(event) => (\n              setSelectedUser(+event.target.value)\n            )}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            selectedPostId={selectedPostId}\n            posts={items}\n            selectedPostHandler={selectedPostHandler}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {\n            selectedPostId !== 0\n            && (\n              <PostDetails\n                selectedPost={selectedPost}\n                selectedPostId={selectedPostId}\n              />\n            )\n          }\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}